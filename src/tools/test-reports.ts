import type { paths, components } from "../api"; // generated by openapi-typescript
import { client, handleError, ListOptions, logJson } from "./client";

export type executeTestsBody =
  components["schemas"]["TestTargetExecutionRequest"];
export type GetTestReportParams =
  paths["/apiKey/v2/test-targets/{testTargetId}/test-reports/{testReportId}"]["get"]["parameters"]["path"];
export type TestReport = components["schemas"]["TestReport"];

export const executeTests = async (
  options: executeTestsBody & { description?: string } & ListOptions,
): Promise<void> => {
  const { data, error } = await client.POST("/apiKey/v2/execute", {
    body: {
      testTargetId: options.testTargetId,
      url: options.url,
      context: {
        source: "manual",
        description: options.description || "CLI execution",
        triggeredBy: {
          type: "USER",
          userId: "cli-user",
        },
      },
      environmentName: options.environmentName,
      tags: options.tags,
      variablesToOverwrite: options.variablesToOverwrite,
    },
  });

  handleError(error);

  if (options.json) {
    logJson(data);
    return;
  }

  if (data) {
    console.log("Test execution started successfully!");
    console.log("Test Report URL:", data.testReportUrl);
    console.log("Report Status:", data.testReport?.status);

    if (data.testReport?.testResults?.length ?? 0 > 0) {
      console.log("\nTest Results:");
      data.testReport?.testResults?.forEach((result) => {
        console.log(`- Test ${result.testCaseId}: ${result.status}`);
        if (result.errorMessage) {
          console.log(`  Error: ${result.errorMessage}`);
        }
        if (result.traceUrl) {
          console.log(`  Trace: ${result.traceUrl}`);
        }
      });
    }
  }
};

export const listTestReport = async (
  options: GetTestReportParams & ListOptions,
): Promise<void> => {
  const { data, error } = await client.GET(
    "/apiKey/v2/test-targets/{testTargetId}/test-reports/{testReportId}",
    {
      params: {
        path: {
          testTargetId: options.testTargetId,
          testReportId: options.testReportId,
        },
      },
    },
  );

  handleError(error);

  if (options.json) {
    logJson(data);
    return;
  }

  const response = data as TestReport;
  console.log("Test Report Details:");
  console.log("Status:", response.status);
  console.log("Execution URL:", response.executionUrl);

  if ((response.testResults ?? []).length > 0) {
    console.log("\nTest Results:");
    (response.testResults ?? []).forEach((result) => {
      console.log(`- Test ${result.testCaseId}: ${result.status}`);
      if (result.errorMessage) {
        console.log(`  Error: ${result.errorMessage}`);
      }
      if (result.traceUrl) {
        console.log(`  Trace: ${result.traceUrl}`);
      }
    });
  }
};
