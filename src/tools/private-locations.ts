import type { components } from "../api"; // generated by openapi-typescript
import { client, handleError, outputResult } from "./client";

export type SuccessResponse = components["schemas"]["SuccessResponse"];
export type PrivateLocationInfo = components["schemas"]["PrivateLocationInfo"];

export const registerLocation = async (options: {
  address: string;
  name: string;
  username: string;
  password: string;
  json?: boolean;
}): Promise<void> => {
  const { data, error } = await client.PUT(
    "/apiKey/v1/private-location/register",
    {
      body: {
        name: options.name,
        registrationData: {
          address: options.address,
          username: options.username,
          password: options.password,
        },
      },
    },
  );

  handleError(error);

  const response = data as SuccessResponse;

  if (options.json) {
    outputResult(response);
    return;
  }

  console.log("Registration result:", response.success ? "Success" : "Failed");
};

export const unregisterLocation = async (options: {
  name: string;
  json?: boolean;
}): Promise<void> => {
  const { data, error } = await client.PUT(
    "/apiKey/v1/private-location/unregister",
    {
      body: {
        name: options.name,
      },
    },
  );

  handleError(error);
  const response = data as SuccessResponse;

  if (options.json) {
    outputResult(response);
    return;
  }

  console.log(
    "Unregistration result:",
    response.success ? "Success" : "Failed",
  );
};

export const listPrivateLocations = async (options: {
  json?: boolean;
}): Promise<void> => {
  const { data, error } = await client.GET("/apiKey/v1/private-location");

  handleError(error);

  const response = data as PrivateLocationInfo;
  if (options.json) {
    outputResult(response);
    return;
  }

  console.log("Private Locations:");
  response.forEach((location) => {
    console.log(`- Name: ${location.name}`);
    console.log(`  Status: ${location.status}`);
    console.log(`  Address: ${location.address}`);
  });
};
