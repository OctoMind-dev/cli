import type { components } from "../api"; // generated by openapi-typescript
import { client, handleError, ListOptions, logJson } from "./client";

export type createDiscoveryBody =
  components["schemas"]["ExternalDiscoveryBody"];
export type DiscoveryResponse = components["schemas"]["DiscoveryResponse"];

export const createDiscovery = async (
  options: createDiscoveryBody & { testTargetId: string } & ListOptions,
): Promise<void> => {
  const requestBody = {
    name: options.name,
    prompt: options.prompt,
    ...(options.entryPointUrlPath && {
      entryPointUrlPath: options.entryPointUrlPath,
    }),
    ...(options.prerequisiteName && {
      prerequisiteName: options.prerequisiteName,
    }),
    ...(options.externalId && { externalId: options.externalId }),
    ...(options.tagNames && { tagNames: options.tagNames }),
    ...(options.folderName && { folderName: options.folderName }),
    ...(options.type && { type: options.type }),
  };

  const { data, error } = await client.POST(
    "/apiKey/v2/test-targets/{testTargetId}/discoveries",
    {
      params: {
        path: {
          testTargetId: options.testTargetId,
        },
      },
      body: requestBody,
    },
  );

  handleError(error);

  const response = data as DiscoveryResponse;
  if (options.json) {
    logJson(response);
    return;
  }

  console.log("Discovery created successfully!");
  console.log(`Discovery ID: ${response.discoveryId}`);
  console.log(`Test Case ID: ${response.testCaseId}`);
};
