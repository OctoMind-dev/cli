import type { paths, components } from "../api"; // generated by openapi-typescript
import { client, handleError, outputResult } from "./client";

export type getNotificationsParams =
  paths["/apiKey/v2/test-targets/{testTargetId}/notifications"]["get"]["parameters"]["path"];
export type Notification = components["schemas"]["Notification"];

export const getNotifications = async (
  options: getNotificationsParams & { json?: boolean },
): Promise<void> => {
  const { data, error } = await client.GET(
    "/apiKey/v2/test-targets/{testTargetId}/notifications",
    {
      params: {
        path: {
          testTargetId: options.testTargetId,
        },
      },
    },
  );

  handleError(error);
  const response = data as Notification[];
  if (options.json) {
    outputResult(response);
    return;
  }

  console.log("Notifications:");
  response.forEach((notification) => {
    console.log(`\nID: ${notification.id}`);
    console.log(`Type: ${notification.type}`);
    console.log(`Created At: ${notification.createdAt}`);
    if (notification.payload?.testReportId) {
      console.log(`Test Report ID: ${notification.payload.testReportId}`);
    }
    if (notification.payload?.testCaseId) {
      console.log(`Test Case ID: ${notification.payload.testCaseId}`);
    }
    if (notification.payload?.failed !== undefined) {
      console.log(`Failed: ${notification.payload.failed}`);
    }
    if (notification.ack) {
      console.log(`Acknowledged: ${notification.ack}`);
    }
  });
};
